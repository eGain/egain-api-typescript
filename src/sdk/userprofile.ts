/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalUserprofileGetAllUserProfiles } from "../funcs/portalUserprofileGetAllUserProfiles.js";
import { portalUserprofileSelectUserProfile } from "../funcs/portalUserprofileSelectUserProfile.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Userprofile extends ClientSDK {
  /**
   * Get All User Profiles Assigned to User
   *
   * @remarks
   * ## Overview
   *   The Get All User Profiles Assigned to User API retrieves all user profiles in the portal that are assigned to the user, displayed in ascending order of name.
   */
  async getAllUserProfiles(
    request: operations.GetAllUserProfilesRequest,
    options?: RequestOptions,
  ): Promise<models.UserProfiles | undefined> {
    return unwrapAsync(portalUserprofileGetAllUserProfiles(
      this,
      request,
      options,
    ));
  }

  /**
   * Select User Profile
   *
   * @remarks
   * ## Overview
   *   The Select User Profile API allows a user to set the user profile for a portal.
   */
  async selectUserProfile(
    request: operations.SelectUserProfileRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(portalUserprofileSelectUserProfile(
      this,
      request,
      options,
    ));
  }
}
