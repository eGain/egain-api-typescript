/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aiservicesRetrieveRetrieveChunks } from "../funcs/aiservicesRetrieveRetrieveChunks.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Retrieve extends ClientSDK {
  /**
   * Retrieve Chunks
   *
   * @remarks
   * The Retrieve API enables enterprises to directly access relevant content chunks from their organizational knowledge sources. It is designed for scenarios where developers want granular control over retrieved information, such as powering custom search, analytics, or retrieval-augmented generation (RAG) pipelines.
   *
   * The Retrieve API's response will either be a Certified Answer or a list of chunks.
   * - **Certified Answers Response**: This response is observed when there's a matching certified answer to the user's query.
   * - **Chunk List Response**: This response is observed, if there is no matched Certified Answer.
   *
   * Responses for both chunks and certified answers include relevance scores and metadata. By leveraging the Retrieve API, organizations can build tailored experiences while retaining confidence in the source material.
   */
  async retrieveChunks(
    request: operations.RetrieveChunksRequest,
    options?: RequestOptions,
  ): Promise<models.RetrieveResponse> {
    return unwrapAsync(aiservicesRetrieveRetrieveChunks(
      this,
      request,
      options,
    ));
  }
}
