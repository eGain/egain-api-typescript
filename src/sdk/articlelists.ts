/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalArticlelistsGetAllArticleLists } from "../funcs/portalArticlelistsGetAllArticleLists.js";
import { portalArticlelistsGetArticleListDetails } from "../funcs/portalArticlelistsGetArticleListDetails.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Articlelists extends ClientSDK {
  /**
   * Get All Article Lists
   *
   * @remarks
   * ## Overview
   *   The Get All Article Lists API returns all quick Article lists that are configured for a portal.
   */
  async getAllArticleLists(
    request: operations.GetAllArticleListsRequest,
    options?: RequestOptions,
  ): Promise<models.ArticleListsResult | undefined> {
    return unwrapAsync(portalArticlelistsGetAllArticleLists(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Article List by ID
   *
   * @remarks
   * ## Overview
   *   The Get Article Lists by ID API returns the details of a quick access Article list that is configured for a portal.
   *
   *   Only those articles in the quick access list articles are returned and are:
   *
   *   - Available for current user profile.
   *   - Tagged with at least one of the provided tags, if tags query parameter is provided.
   *   - Displayable. An Article is displayable if "Include in browse on portals" property is enable for the Article.
   */
  async getArticleListDetails(
    request: operations.GetArticleListDetailsRequest,
    options?: RequestOptions,
  ): Promise<models.ArticleList | undefined> {
    return unwrapAsync(portalArticlelistsGetArticleListDetails(
      this,
      request,
      options,
    ));
  }
}
