/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalAttachmentCreateSignedURL } from "../funcs/portalAttachmentCreateSignedURL.js";
import { portalAttachmentUploadAttachment } from "../funcs/portalAttachmentUploadAttachment.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Attachment extends ClientSDK {
  /**
   * Generate Signed URL to Upload API
   *
   * @remarks
   * ## Overview
   *    The Generate Signed URL to Upload API produces a signature that is used to upload an attachment.
   */
  async createSignedURL(
    request: operations.CreateSignedURLRequest,
    options?: RequestOptions,
  ): Promise<models.Attachment> {
    return unwrapAsync(portalAttachmentCreateSignedURL(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload Attachment
   *
   * @remarks
   * ## Overview
   *    The Upload Attachment API uses the signed URL produced by the Generate Signed URL to Upload API to upload an attachment.
   *    The Make a Suggestion API uses this API to upload attachments.
   */
  async uploadAttachment(
    request: operations.UploadAttachmentRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(portalAttachmentUploadAttachment(
      this,
      request,
      options,
    ));
  }
}
