/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalExportExportContent } from "../funcs/portalExportExportContent.js";
import { portalExportExportStatus } from "../funcs/portalExportExportStatus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Export extends ClientSDK {
  /**
   * Export Knowledge
   *
   * @remarks
   * ## Overview
   *    The Content Export API initiates a bulk export of the Knowledge Hub to a client-provided Amazon S3 bucket or SFTP server path.
   *    It returns a URL with a Job ID to enable tracking the status of this asynchronous operation.
   *    Each export job can send multiple JSON files, depending on the total number of items to process.
   *    More than one bulk export can take place, as needed, one per portal.
   *
   * ## Permission
   *   * Only a client application can invoke this API.
   */
  async exportContent(
    request: models.KnowledgeExport,
    options?: RequestOptions,
  ): Promise<operations.ExportContentResponse | undefined> {
    return unwrapAsync(portalExportExportContent(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Export Job Status
   *
   * @remarks
   * ## Overview
   *    The Content Export Status API provides real-time status information to monitor job progress and check completion status.
   *
   * ## Status Values
   * - **Pending**: Job is pending start of processing
   * - **In Progress**: Job is actively processing content
   * - **Completed**: Job finished successfully
   * - **Failed**: Job encountered errors and could not complete
   *
   * ## Response Information
   * - **Current Status**: Real-time job status
   * - **Progress Metrics**: Items processed, total items
   * - **Error Details**: Specific errors encountered during processing
   * - **Timing Information**: Start time, estimated completion, actual completion
   *
   * ## Permission
   *   * Only a client application can invoke this API.
   */
  async exportStatus(
    request: operations.ExportStatusRequest,
    options?: RequestOptions,
  ): Promise<models.ExportStatus> {
    return unwrapAsync(portalExportExportStatus(
      this,
      request,
      options,
    ));
  }
}
