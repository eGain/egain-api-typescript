/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalPopulararticlesGetpopulararticles } from "../funcs/portalPopulararticlesGetpopulararticles.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Populararticles extends ClientSDK {
  /**
   * Get Popular Articles
   *
   * @remarks
   * ## Overview
   *   The Popular Articles API allows a user to retrieve popular articles.
   * ## Prerequisites
   *     * Only displayable articles are returned. An Article is displayable when "Include in browse on portals" property is enable for the Article.
   * ## Permissions
   *   * Agent permissions: The following permissions are required if user is an Agent:
   *     * If Article has Access Tags, Article must be available for agent's current user profile.
   *     * If Article has Publish Views, at least one edition of Article must be available for agent's current user profile.
   *     * If Article has filters and tags query parameter provided, Article filters must match provided tags or tag groups.
   *   * Customer permissions: The following permissions are required if user is a Customer:
   *       * If Article has Access tags:
   *        * Portal must have default user profile, and;
   *        * Article must be available for portal's default user profile.
   *     * If Article has Publish Views:
   *       * Portal must have default user profile, and;
   *       * At least one edition must be available for portal's default user profile.
   *     *  If Article has filters and tags query parameter provided, Article filters must match provided tags or tag groups.
   */
  async getpopulararticles(
    request: operations.GetpopulararticlesRequest,
    options?: RequestOptions,
  ): Promise<models.ArticleResults | undefined> {
    return unwrapAsync(portalPopulararticlesGetpopulararticles(
      this,
      request,
      options,
    ));
  }
}
