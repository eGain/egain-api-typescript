/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portalConnectorssearcheventsCreateSearchResultEventForConnectors } from "../funcs/portalConnectorssearcheventsCreateSearchResultEventForConnectors.js";
import { portalConnectorssearcheventsCreateViewedSearchResultsEventForConnectors } from "../funcs/portalConnectorssearcheventsCreateViewedSearchResultsEventForConnectors.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Connectorssearchevents extends ClientSDK {
  /**
   * Event for Search Using Connectors
   *
   * @remarks
   * ## Overview
   *    The Event for Search Using Connectors API creates an event to initiate a search operation for retrieving content from external sources or integrations within the portal.
   *    It allows users to set up search events based on specified criteria.
   */
  async createSearchResultEventForConnectors(
    request: operations.CreateSearchResultEventForConnectorsRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(
      portalConnectorssearcheventsCreateSearchResultEventForConnectors(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Event for Viewed Search Results Using Connectors
   *
   * @remarks
   * ## Overview
   *    The Event for Viewed Search Results Using Connectors API creates an event to log when search results from external content are viewed.
   *    This helps in tracking and analyzing user interactions with search results retrieved from various external sources.
   */
  async createViewedSearchResultsEventForConnectors(
    request: operations.CreateViewedSearchResultsEventForConnectorsRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(
      portalConnectorssearcheventsCreateViewedSearchResultsEventForConnectors(
        this,
        request,
        options,
      ),
    );
  }
}
