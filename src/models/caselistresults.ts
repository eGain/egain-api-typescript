/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CaseListResult,
  CaseListResult$inboundSchema,
  CaseListResult$Outbound,
  CaseListResult$outboundSchema,
} from "./caselistresult.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  PaginationInfo,
  PaginationInfo$inboundSchema,
  PaginationInfo$Outbound,
  PaginationInfo$outboundSchema,
} from "./paginationinfo.js";

/**
 * Success
 */
export type CaseListResults = {
  /**
   * Cases
   */
  case?: Array<CaseListResult> | undefined;
  paginationInfo?: PaginationInfo | undefined;
};

/** @internal */
export const CaseListResults$inboundSchema: z.ZodType<
  CaseListResults,
  z.ZodTypeDef,
  unknown
> = z.object({
  case: z.array(CaseListResult$inboundSchema).optional(),
  paginationInfo: PaginationInfo$inboundSchema.optional(),
});

/** @internal */
export type CaseListResults$Outbound = {
  case?: Array<CaseListResult$Outbound> | undefined;
  paginationInfo?: PaginationInfo$Outbound | undefined;
};

/** @internal */
export const CaseListResults$outboundSchema: z.ZodType<
  CaseListResults$Outbound,
  z.ZodTypeDef,
  CaseListResults
> = z.object({
  case: z.array(CaseListResult$outboundSchema).optional(),
  paginationInfo: PaginationInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CaseListResults$ {
  /** @deprecated use `CaseListResults$inboundSchema` instead. */
  export const inboundSchema = CaseListResults$inboundSchema;
  /** @deprecated use `CaseListResults$outboundSchema` instead. */
  export const outboundSchema = CaseListResults$outboundSchema;
  /** @deprecated use `CaseListResults$Outbound` instead. */
  export type Outbound = CaseListResults$Outbound;
}

export function caseListResultsToJSON(
  caseListResults: CaseListResults,
): string {
  return JSON.stringify(CaseListResults$outboundSchema.parse(caseListResults));
}

export function caseListResultsFromJSON(
  jsonString: string,
): SafeParseResult<CaseListResults, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CaseListResults$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CaseListResults' from JSON`,
  );
}
