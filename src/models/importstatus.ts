/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ImportStatusStatus = {
  Scheduled: "Scheduled",
  InProgress: "In Progress",
  Successful: "Successful",
  Failed: "Failed",
  Cancelled: "Cancelled",
} as const;
export type ImportStatusStatus = ClosedEnum<typeof ImportStatusStatus>;

export type ImportStatus = {
  status: ImportStatusStatus;
  logFileLocation?: string | undefined;
};

/** @internal */
export const ImportStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof ImportStatusStatus
> = z.nativeEnum(ImportStatusStatus);

/** @internal */
export const ImportStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof ImportStatusStatus
> = ImportStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportStatusStatus$ {
  /** @deprecated use `ImportStatusStatus$inboundSchema` instead. */
  export const inboundSchema = ImportStatusStatus$inboundSchema;
  /** @deprecated use `ImportStatusStatus$outboundSchema` instead. */
  export const outboundSchema = ImportStatusStatus$outboundSchema;
}

/** @internal */
export const ImportStatus$inboundSchema: z.ZodType<
  ImportStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: ImportStatusStatus$inboundSchema,
  logFileLocation: z.string().optional(),
});

/** @internal */
export type ImportStatus$Outbound = {
  status: string;
  logFileLocation?: string | undefined;
};

/** @internal */
export const ImportStatus$outboundSchema: z.ZodType<
  ImportStatus$Outbound,
  z.ZodTypeDef,
  ImportStatus
> = z.object({
  status: ImportStatusStatus$outboundSchema,
  logFileLocation: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportStatus$ {
  /** @deprecated use `ImportStatus$inboundSchema` instead. */
  export const inboundSchema = ImportStatus$inboundSchema;
  /** @deprecated use `ImportStatus$outboundSchema` instead. */
  export const outboundSchema = ImportStatus$outboundSchema;
  /** @deprecated use `ImportStatus$Outbound` instead. */
  export type Outbound = ImportStatus$Outbound;
}

export function importStatusToJSON(importStatus: ImportStatus): string {
  return JSON.stringify(ImportStatus$outboundSchema.parse(importStatus));
}

export function importStatusFromJSON(
  jsonString: string,
): SafeParseResult<ImportStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImportStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImportStatus' from JSON`,
  );
}
