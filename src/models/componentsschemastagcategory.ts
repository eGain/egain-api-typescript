/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ComponentsSchemasTag,
  ComponentsSchemasTag$inboundSchema,
  ComponentsSchemasTag$Outbound,
  ComponentsSchemasTag$outboundSchema,
} from "./componentsschemastag.js";
import {
  ComponentsSchemasTagGroup,
  ComponentsSchemasTagGroup$inboundSchema,
  ComponentsSchemasTagGroup$Outbound,
  ComponentsSchemasTagGroup$outboundSchema,
} from "./componentsschemastaggroup.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Tag Categories for Interest configured for a portal.
 */
export type ComponentsSchemasTagCategory = {
  /**
   * Name of the Tag Category
   */
  name?: string | undefined;
  /**
   * The ID of the Tag Category.<br>A Tag Category ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits.
   */
  id?: string | undefined;
  tag?: Array<ComponentsSchemasTag> | undefined;
  tagGroup?: Array<ComponentsSchemasTagGroup> | undefined;
};

/** @internal */
export const ComponentsSchemasTagCategory$inboundSchema: z.ZodType<
  ComponentsSchemasTagCategory,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  id: z.string().optional(),
  tag: z.array(ComponentsSchemasTag$inboundSchema).optional(),
  tagGroup: z.array(ComponentsSchemasTagGroup$inboundSchema).optional(),
});

/** @internal */
export type ComponentsSchemasTagCategory$Outbound = {
  name?: string | undefined;
  id?: string | undefined;
  tag?: Array<ComponentsSchemasTag$Outbound> | undefined;
  tagGroup?: Array<ComponentsSchemasTagGroup$Outbound> | undefined;
};

/** @internal */
export const ComponentsSchemasTagCategory$outboundSchema: z.ZodType<
  ComponentsSchemasTagCategory$Outbound,
  z.ZodTypeDef,
  ComponentsSchemasTagCategory
> = z.object({
  name: z.string().optional(),
  id: z.string().optional(),
  tag: z.array(ComponentsSchemasTag$outboundSchema).optional(),
  tagGroup: z.array(ComponentsSchemasTagGroup$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComponentsSchemasTagCategory$ {
  /** @deprecated use `ComponentsSchemasTagCategory$inboundSchema` instead. */
  export const inboundSchema = ComponentsSchemasTagCategory$inboundSchema;
  /** @deprecated use `ComponentsSchemasTagCategory$outboundSchema` instead. */
  export const outboundSchema = ComponentsSchemasTagCategory$outboundSchema;
  /** @deprecated use `ComponentsSchemasTagCategory$Outbound` instead. */
  export type Outbound = ComponentsSchemasTagCategory$Outbound;
}

export function componentsSchemasTagCategoryToJSON(
  componentsSchemasTagCategory: ComponentsSchemasTagCategory,
): string {
  return JSON.stringify(
    ComponentsSchemasTagCategory$outboundSchema.parse(
      componentsSchemasTagCategory,
    ),
  );
}

export function componentsSchemasTagCategoryFromJSON(
  jsonString: string,
): SafeParseResult<ComponentsSchemasTagCategory, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComponentsSchemasTagCategory$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComponentsSchemasTagCategory' from JSON`,
  );
}
