/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  UserProfile,
  UserProfile$inboundSchema,
  UserProfile$Outbound,
  UserProfile$outboundSchema,
} from "./userprofile.js";

/**
 * Success
 */
export type UserProfiles = {
  /**
   * User profiles assigend to user.
   */
  profile?: Array<UserProfile> | undefined;
};

/** @internal */
export const UserProfiles$inboundSchema: z.ZodType<
  UserProfiles,
  z.ZodTypeDef,
  unknown
> = z.object({
  profile: z.array(UserProfile$inboundSchema).optional(),
});

/** @internal */
export type UserProfiles$Outbound = {
  profile?: Array<UserProfile$Outbound> | undefined;
};

/** @internal */
export const UserProfiles$outboundSchema: z.ZodType<
  UserProfiles$Outbound,
  z.ZodTypeDef,
  UserProfiles
> = z.object({
  profile: z.array(UserProfile$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserProfiles$ {
  /** @deprecated use `UserProfiles$inboundSchema` instead. */
  export const inboundSchema = UserProfiles$inboundSchema;
  /** @deprecated use `UserProfiles$outboundSchema` instead. */
  export const outboundSchema = UserProfiles$outboundSchema;
  /** @deprecated use `UserProfiles$Outbound` instead. */
  export type Outbound = UserProfiles$Outbound;
}

export function userProfilesToJSON(userProfiles: UserProfiles): string {
  return JSON.stringify(UserProfiles$outboundSchema.parse(userProfiles));
}

export function userProfilesFromJSON(
  jsonString: string,
): SafeParseResult<UserProfiles, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserProfiles$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserProfiles' from JSON`,
  );
}
