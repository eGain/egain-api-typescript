/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

/**
 * Summary attributes for an Attachment.
 */
export type AttachmentSummary = {
  /**
   * The ID of the Attachment.
   */
  id?: string | undefined;
  /**
   * Defines the relationship between this resource and another object.
   */
  link?: Link | undefined;
  /**
   * The name of the Attachment file.<li>This must not exceed 255 characters.</li>
   */
  fileName?: string | undefined;
  /**
   * The size of the Attachment.<li>Limited to 25MB.</li>
   */
  size?: number | undefined;
};

/** @internal */
export const AttachmentSummary$inboundSchema: z.ZodType<
  AttachmentSummary,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  link: Link$inboundSchema.optional(),
  fileName: z.string().optional(),
  size: z.number().int().optional(),
});

/** @internal */
export type AttachmentSummary$Outbound = {
  id?: string | undefined;
  link?: Link$Outbound | undefined;
  fileName?: string | undefined;
  size?: number | undefined;
};

/** @internal */
export const AttachmentSummary$outboundSchema: z.ZodType<
  AttachmentSummary$Outbound,
  z.ZodTypeDef,
  AttachmentSummary
> = z.object({
  id: z.string().optional(),
  link: Link$outboundSchema.optional(),
  fileName: z.string().optional(),
  size: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttachmentSummary$ {
  /** @deprecated use `AttachmentSummary$inboundSchema` instead. */
  export const inboundSchema = AttachmentSummary$inboundSchema;
  /** @deprecated use `AttachmentSummary$outboundSchema` instead. */
  export const outboundSchema = AttachmentSummary$outboundSchema;
  /** @deprecated use `AttachmentSummary$Outbound` instead. */
  export type Outbound = AttachmentSummary$Outbound;
}

export function attachmentSummaryToJSON(
  attachmentSummary: AttachmentSummary,
): string {
  return JSON.stringify(
    AttachmentSummary$outboundSchema.parse(attachmentSummary),
  );
}

export function attachmentSummaryFromJSON(
  jsonString: string,
): SafeParseResult<AttachmentSummary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AttachmentSummary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AttachmentSummary' from JSON`,
  );
}
