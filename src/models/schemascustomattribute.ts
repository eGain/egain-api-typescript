/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The custom attribute's type.
 */
export const SchemasCustomAttributeType = {
  String: "STRING",
  Integer: "INTEGER",
  Boolean: "BOOLEAN",
  Datetime: "DATETIME",
} as const;
/**
 * The custom attribute's type.
 */
export type SchemasCustomAttributeType = ClosedEnum<
  typeof SchemasCustomAttributeType
>;

export type SchemasCustomAttribute = {
  /**
   * The custom attribute's name.
   */
  name?: string | undefined;
  /**
   * The custom attribute's value.
   */
  value?: string | undefined;
  /**
   * The custom attribute's type.
   */
  type?: SchemasCustomAttributeType | undefined;
};

/** @internal */
export const SchemasCustomAttributeType$inboundSchema: z.ZodNativeEnum<
  typeof SchemasCustomAttributeType
> = z.nativeEnum(SchemasCustomAttributeType);

/** @internal */
export const SchemasCustomAttributeType$outboundSchema: z.ZodNativeEnum<
  typeof SchemasCustomAttributeType
> = SchemasCustomAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SchemasCustomAttributeType$ {
  /** @deprecated use `SchemasCustomAttributeType$inboundSchema` instead. */
  export const inboundSchema = SchemasCustomAttributeType$inboundSchema;
  /** @deprecated use `SchemasCustomAttributeType$outboundSchema` instead. */
  export const outboundSchema = SchemasCustomAttributeType$outboundSchema;
}

/** @internal */
export const SchemasCustomAttribute$inboundSchema: z.ZodType<
  SchemasCustomAttribute,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  value: z.string().optional(),
  type: SchemasCustomAttributeType$inboundSchema.optional(),
});

/** @internal */
export type SchemasCustomAttribute$Outbound = {
  name?: string | undefined;
  value?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const SchemasCustomAttribute$outboundSchema: z.ZodType<
  SchemasCustomAttribute$Outbound,
  z.ZodTypeDef,
  SchemasCustomAttribute
> = z.object({
  name: z.string().optional(),
  value: z.string().optional(),
  type: SchemasCustomAttributeType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SchemasCustomAttribute$ {
  /** @deprecated use `SchemasCustomAttribute$inboundSchema` instead. */
  export const inboundSchema = SchemasCustomAttribute$inboundSchema;
  /** @deprecated use `SchemasCustomAttribute$outboundSchema` instead. */
  export const outboundSchema = SchemasCustomAttribute$outboundSchema;
  /** @deprecated use `SchemasCustomAttribute$Outbound` instead. */
  export type Outbound = SchemasCustomAttribute$Outbound;
}

export function schemasCustomAttributeToJSON(
  schemasCustomAttribute: SchemasCustomAttribute,
): string {
  return JSON.stringify(
    SchemasCustomAttribute$outboundSchema.parse(schemasCustomAttribute),
  );
}

export function schemasCustomAttributeFromJSON(
  jsonString: string,
): SafeParseResult<SchemasCustomAttribute, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SchemasCustomAttribute$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SchemasCustomAttribute' from JSON`,
  );
}
