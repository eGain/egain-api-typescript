/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ExportStatusRequest = {
  /**
   * **Example Usage:**
   *
   * @remarks
   * ```bash
   * GET /content/export/7A84B875-6F75-4C7B-B137-0632B62DB0BD/status
   * ```
   */
  jobID: string;
};

/** @internal */
export const ExportStatusRequest$inboundSchema: z.ZodType<
  ExportStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  jobID: z.string(),
});

/** @internal */
export type ExportStatusRequest$Outbound = {
  jobID: string;
};

/** @internal */
export const ExportStatusRequest$outboundSchema: z.ZodType<
  ExportStatusRequest$Outbound,
  z.ZodTypeDef,
  ExportStatusRequest
> = z.object({
  jobID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportStatusRequest$ {
  /** @deprecated use `ExportStatusRequest$inboundSchema` instead. */
  export const inboundSchema = ExportStatusRequest$inboundSchema;
  /** @deprecated use `ExportStatusRequest$outboundSchema` instead. */
  export const outboundSchema = ExportStatusRequest$outboundSchema;
  /** @deprecated use `ExportStatusRequest$Outbound` instead. */
  export type Outbound = ExportStatusRequest$Outbound;
}

export function exportStatusRequestToJSON(
  exportStatusRequest: ExportStatusRequest,
): string {
  return JSON.stringify(
    ExportStatusRequest$outboundSchema.parse(exportStatusRequest),
  );
}

export function exportStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<ExportStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportStatusRequest' from JSON`,
  );
}
