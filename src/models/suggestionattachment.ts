/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

/**
 * This schema contains the definition of an Attachment.
 */
export type SuggestionAttachment = {
  /**
   * The ID of the Attachment.
   */
  id?: string | undefined;
  /**
   * Defines the relationship between this resource and another object.
   */
  link?: Link | undefined;
  /**
   * The name of the Attachment file.<li>This must not exceed 255 characters.</li>
   */
  fileName?: string | undefined;
  /**
   * The size of the Attachment.<li>Limited to 25MB.</li>
   */
  size?: number | undefined;
  /**
   * The content URL of the Attachment. Download immediately, as this unique URL exists temporarily and can only be retrieved once before deletion.
   *
   * @remarks
   */
  contentUrl?: string | undefined;
};

/** @internal */
export const SuggestionAttachment$inboundSchema: z.ZodType<
  SuggestionAttachment,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  link: Link$inboundSchema.optional(),
  fileName: z.string().optional(),
  size: z.number().int().optional(),
  contentUrl: z.string().optional(),
});

/** @internal */
export type SuggestionAttachment$Outbound = {
  id?: string | undefined;
  link?: Link$Outbound | undefined;
  fileName?: string | undefined;
  size?: number | undefined;
  contentUrl?: string | undefined;
};

/** @internal */
export const SuggestionAttachment$outboundSchema: z.ZodType<
  SuggestionAttachment$Outbound,
  z.ZodTypeDef,
  SuggestionAttachment
> = z.object({
  id: z.string().optional(),
  link: Link$outboundSchema.optional(),
  fileName: z.string().optional(),
  size: z.number().int().optional(),
  contentUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuggestionAttachment$ {
  /** @deprecated use `SuggestionAttachment$inboundSchema` instead. */
  export const inboundSchema = SuggestionAttachment$inboundSchema;
  /** @deprecated use `SuggestionAttachment$outboundSchema` instead. */
  export const outboundSchema = SuggestionAttachment$outboundSchema;
  /** @deprecated use `SuggestionAttachment$Outbound` instead. */
  export type Outbound = SuggestionAttachment$Outbound;
}

export function suggestionAttachmentToJSON(
  suggestionAttachment: SuggestionAttachment,
): string {
  return JSON.stringify(
    SuggestionAttachment$outboundSchema.parse(suggestionAttachment),
  );
}

export function suggestionAttachmentFromJSON(
  jsonString: string,
): SafeParseResult<SuggestionAttachment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SuggestionAttachment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SuggestionAttachment' from JSON`,
  );
}
