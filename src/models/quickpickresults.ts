/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  PaginationInfo,
  PaginationInfo$inboundSchema,
  PaginationInfo$Outbound,
  PaginationInfo$outboundSchema,
} from "./paginationinfo.js";
import {
  QuickpickResult,
  QuickpickResult$inboundSchema,
  QuickpickResult$Outbound,
  QuickpickResult$outboundSchema,
} from "./quickpickresult.js";

/**
 * Success
 */
export type QuickpickResults = {
  /**
   * quick picks
   */
  quickpick?: Array<QuickpickResult> | undefined;
  paginationInfo?: PaginationInfo | undefined;
};

/** @internal */
export const QuickpickResults$inboundSchema: z.ZodType<
  QuickpickResults,
  z.ZodTypeDef,
  unknown
> = z.object({
  quickpick: z.array(QuickpickResult$inboundSchema).optional(),
  paginationInfo: PaginationInfo$inboundSchema.optional(),
});

/** @internal */
export type QuickpickResults$Outbound = {
  quickpick?: Array<QuickpickResult$Outbound> | undefined;
  paginationInfo?: PaginationInfo$Outbound | undefined;
};

/** @internal */
export const QuickpickResults$outboundSchema: z.ZodType<
  QuickpickResults$Outbound,
  z.ZodTypeDef,
  QuickpickResults
> = z.object({
  quickpick: z.array(QuickpickResult$outboundSchema).optional(),
  paginationInfo: PaginationInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuickpickResults$ {
  /** @deprecated use `QuickpickResults$inboundSchema` instead. */
  export const inboundSchema = QuickpickResults$inboundSchema;
  /** @deprecated use `QuickpickResults$outboundSchema` instead. */
  export const outboundSchema = QuickpickResults$outboundSchema;
  /** @deprecated use `QuickpickResults$Outbound` instead. */
  export type Outbound = QuickpickResults$Outbound;
}

export function quickpickResultsToJSON(
  quickpickResults: QuickpickResults,
): string {
  return JSON.stringify(
    QuickpickResults$outboundSchema.parse(quickpickResults),
  );
}

export function quickpickResultsFromJSON(
  jsonString: string,
): SafeParseResult<QuickpickResults, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QuickpickResults$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QuickpickResults' from JSON`,
  );
}
