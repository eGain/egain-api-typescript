/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Success
 */
export type Attachment = {
  /**
   * The ID of the attachment.
   */
  altId?: string | undefined;
  /**
   * The name of the attachment.
   */
  name?: string | undefined;
  /**
   * The content URL to upload an attachment.
   */
  contentUrl?: string | undefined;
};

/** @internal */
export const Attachment$inboundSchema: z.ZodType<
  Attachment,
  z.ZodTypeDef,
  unknown
> = z.object({
  altId: z.string().optional(),
  name: z.string().optional(),
  contentUrl: z.string().optional(),
});

/** @internal */
export type Attachment$Outbound = {
  altId?: string | undefined;
  name?: string | undefined;
  contentUrl?: string | undefined;
};

/** @internal */
export const Attachment$outboundSchema: z.ZodType<
  Attachment$Outbound,
  z.ZodTypeDef,
  Attachment
> = z.object({
  altId: z.string().optional(),
  name: z.string().optional(),
  contentUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Attachment$ {
  /** @deprecated use `Attachment$inboundSchema` instead. */
  export const inboundSchema = Attachment$inboundSchema;
  /** @deprecated use `Attachment$outboundSchema` instead. */
  export const outboundSchema = Attachment$outboundSchema;
  /** @deprecated use `Attachment$Outbound` instead. */
  export type Outbound = Attachment$Outbound;
}

export function attachmentToJSON(attachment: Attachment): string {
  return JSON.stringify(Attachment$outboundSchema.parse(attachment));
}

export function attachmentFromJSON(
  jsonString: string,
): SafeParseResult<Attachment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Attachment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Attachment' from JSON`,
  );
}
