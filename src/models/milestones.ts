/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Milestone,
  Milestone$inboundSchema,
  Milestone$Outbound,
  Milestone$outboundSchema,
} from "./milestone.js";

/**
 * Success
 */
export type Milestones = {
  /**
   * milestones
   */
  milestone?: Array<Milestone> | undefined;
};

/** @internal */
export const Milestones$inboundSchema: z.ZodType<
  Milestones,
  z.ZodTypeDef,
  unknown
> = z.object({
  milestone: z.array(Milestone$inboundSchema).optional(),
});

/** @internal */
export type Milestones$Outbound = {
  milestone?: Array<Milestone$Outbound> | undefined;
};

/** @internal */
export const Milestones$outboundSchema: z.ZodType<
  Milestones$Outbound,
  z.ZodTypeDef,
  Milestones
> = z.object({
  milestone: z.array(Milestone$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Milestones$ {
  /** @deprecated use `Milestones$inboundSchema` instead. */
  export const inboundSchema = Milestones$inboundSchema;
  /** @deprecated use `Milestones$outboundSchema` instead. */
  export const outboundSchema = Milestones$outboundSchema;
  /** @deprecated use `Milestones$Outbound` instead. */
  export type Outbound = Milestones$Outbound;
}

export function milestonesToJSON(milestones: Milestones): string {
  return JSON.stringify(Milestones$outboundSchema.parse(milestones));
}

export function milestonesFromJSON(
  jsonString: string,
): SafeParseResult<Milestones, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Milestones$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Milestones' from JSON`,
  );
}
