/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The code of the language.
 */
export const ArticleActivityLinkCode = {
  EnUS: "en-US",
  EnGB: "en-GB",
  FRFR: "fr-FR",
  ESES: "es-ES",
  ITIT: "it-IT",
  DEDE: "de-DE",
  NLNL: "nl-NL",
  PtBR: "pt-BR",
  PTPT: "pt-PT",
  DaDK: "da-DK",
  SvSE: "sv-SE",
  RURU: "ru-RU",
  FrCA: "fr-CA",
  ZhCN: "zh-CN",
  JaJP: "ja-JP",
  KoKR: "ko-KR",
} as const;
/**
 * The code of the language.
 */
export type ArticleActivityLinkCode = ClosedEnum<
  typeof ArticleActivityLinkCode
>;

/**
 * The knowledge base language in which the version is created.
 */
export type ArticleActivityLinkLanguage = {
  /**
   * The code of the language.
   */
  code: ArticleActivityLinkCode;
};

export type ArticleActivityLink = {
  /**
   * An Article version's ID.
   */
  versionId: string;
  /**
   * An Article edition's ID.
   */
  editionId?: string | undefined;
  /**
   * The knowledge base language in which the version is created.
   */
  language: ArticleActivityLinkLanguage;
};

/** @internal */
export const ArticleActivityLinkCode$inboundSchema: z.ZodNativeEnum<
  typeof ArticleActivityLinkCode
> = z.nativeEnum(ArticleActivityLinkCode);

/** @internal */
export const ArticleActivityLinkCode$outboundSchema: z.ZodNativeEnum<
  typeof ArticleActivityLinkCode
> = ArticleActivityLinkCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticleActivityLinkCode$ {
  /** @deprecated use `ArticleActivityLinkCode$inboundSchema` instead. */
  export const inboundSchema = ArticleActivityLinkCode$inboundSchema;
  /** @deprecated use `ArticleActivityLinkCode$outboundSchema` instead. */
  export const outboundSchema = ArticleActivityLinkCode$outboundSchema;
}

/** @internal */
export const ArticleActivityLinkLanguage$inboundSchema: z.ZodType<
  ArticleActivityLinkLanguage,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: ArticleActivityLinkCode$inboundSchema,
});

/** @internal */
export type ArticleActivityLinkLanguage$Outbound = {
  code: string;
};

/** @internal */
export const ArticleActivityLinkLanguage$outboundSchema: z.ZodType<
  ArticleActivityLinkLanguage$Outbound,
  z.ZodTypeDef,
  ArticleActivityLinkLanguage
> = z.object({
  code: ArticleActivityLinkCode$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticleActivityLinkLanguage$ {
  /** @deprecated use `ArticleActivityLinkLanguage$inboundSchema` instead. */
  export const inboundSchema = ArticleActivityLinkLanguage$inboundSchema;
  /** @deprecated use `ArticleActivityLinkLanguage$outboundSchema` instead. */
  export const outboundSchema = ArticleActivityLinkLanguage$outboundSchema;
  /** @deprecated use `ArticleActivityLinkLanguage$Outbound` instead. */
  export type Outbound = ArticleActivityLinkLanguage$Outbound;
}

export function articleActivityLinkLanguageToJSON(
  articleActivityLinkLanguage: ArticleActivityLinkLanguage,
): string {
  return JSON.stringify(
    ArticleActivityLinkLanguage$outboundSchema.parse(
      articleActivityLinkLanguage,
    ),
  );
}

export function articleActivityLinkLanguageFromJSON(
  jsonString: string,
): SafeParseResult<ArticleActivityLinkLanguage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ArticleActivityLinkLanguage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ArticleActivityLinkLanguage' from JSON`,
  );
}

/** @internal */
export const ArticleActivityLink$inboundSchema: z.ZodType<
  ArticleActivityLink,
  z.ZodTypeDef,
  unknown
> = z.object({
  versionId: z.string(),
  editionId: z.string().optional(),
  language: z.lazy(() => ArticleActivityLinkLanguage$inboundSchema),
});

/** @internal */
export type ArticleActivityLink$Outbound = {
  versionId: string;
  editionId?: string | undefined;
  language: ArticleActivityLinkLanguage$Outbound;
};

/** @internal */
export const ArticleActivityLink$outboundSchema: z.ZodType<
  ArticleActivityLink$Outbound,
  z.ZodTypeDef,
  ArticleActivityLink
> = z.object({
  versionId: z.string(),
  editionId: z.string().optional(),
  language: z.lazy(() => ArticleActivityLinkLanguage$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticleActivityLink$ {
  /** @deprecated use `ArticleActivityLink$inboundSchema` instead. */
  export const inboundSchema = ArticleActivityLink$inboundSchema;
  /** @deprecated use `ArticleActivityLink$outboundSchema` instead. */
  export const outboundSchema = ArticleActivityLink$outboundSchema;
  /** @deprecated use `ArticleActivityLink$Outbound` instead. */
  export type Outbound = ArticleActivityLink$Outbound;
}

export function articleActivityLinkToJSON(
  articleActivityLink: ArticleActivityLink,
): string {
  return JSON.stringify(
    ArticleActivityLink$outboundSchema.parse(articleActivityLink),
  );
}

export function articleActivityLinkFromJSON(
  jsonString: string,
): SafeParseResult<ArticleActivityLink, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ArticleActivityLink$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ArticleActivityLink' from JSON`,
  );
}
