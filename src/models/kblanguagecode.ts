/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * A short language code. A list of codes can be found below:
 *
 * @remarks
 *
 * |Code|Description
 * |----|-----------
 * |en-US|English (United States)
 * |en-GB|English (United Kingdom)
 * |fr-FR|French (France)
 * |es-ES|Spanish (Spain)
 * |it-IT|Italian (Italy)
 * |de-DE|German (Germany)
 * |nl-NL|Dutch (Netherlands)
 * |pt-BR|Portuguese (Brazil)
 * |pt-PT|Portuguese (Portugal)
 * |da-DK|Danish (Denmark)
 * |sv-SE|Swedish (Sweden)
 * |ru-RU|Russian (Russia)
 * |fr-CA|French (Canada)
 * |zh-CN|Chinese (Simplified, China)
 * |ja-JP|Japanese (Japan)
 * |ko-KR|Korean (South Korea)
 * |nn-NO|Norwegian Nynorsk (Norway)
 */
export const KbLanguageCode = {
  EnUS: "en-US",
  EnGB: "en-GB",
  FRFR: "fr-FR",
  ESES: "es-ES",
  ITIT: "it-IT",
  DEDE: "de-DE",
  NLNL: "nl-NL",
  PtBR: "pt-BR",
  PTPT: "pt-PT",
  DaDK: "da-DK",
  SvSE: "sv-SE",
  RURU: "ru-RU",
  FrCA: "fr-CA",
  ZhCN: "zh-CN",
  JaJP: "ja-JP",
  KoKR: "ko-KR",
  NnNO: "nn-NO",
} as const;
/**
 * A short language code. A list of codes can be found below:
 *
 * @remarks
 *
 * |Code|Description
 * |----|-----------
 * |en-US|English (United States)
 * |en-GB|English (United Kingdom)
 * |fr-FR|French (France)
 * |es-ES|Spanish (Spain)
 * |it-IT|Italian (Italy)
 * |de-DE|German (Germany)
 * |nl-NL|Dutch (Netherlands)
 * |pt-BR|Portuguese (Brazil)
 * |pt-PT|Portuguese (Portugal)
 * |da-DK|Danish (Denmark)
 * |sv-SE|Swedish (Sweden)
 * |ru-RU|Russian (Russia)
 * |fr-CA|French (Canada)
 * |zh-CN|Chinese (Simplified, China)
 * |ja-JP|Japanese (Japan)
 * |ko-KR|Korean (South Korea)
 * |nn-NO|Norwegian Nynorsk (Norway)
 */
export type KbLanguageCode = ClosedEnum<typeof KbLanguageCode>;

/** @internal */
export const KbLanguageCode$inboundSchema: z.ZodNativeEnum<
  typeof KbLanguageCode
> = z.nativeEnum(KbLanguageCode);

/** @internal */
export const KbLanguageCode$outboundSchema: z.ZodNativeEnum<
  typeof KbLanguageCode
> = KbLanguageCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KbLanguageCode$ {
  /** @deprecated use `KbLanguageCode$inboundSchema` instead. */
  export const inboundSchema = KbLanguageCode$inboundSchema;
  /** @deprecated use `KbLanguageCode$outboundSchema` instead. */
  export const outboundSchema = KbLanguageCode$outboundSchema;
}
