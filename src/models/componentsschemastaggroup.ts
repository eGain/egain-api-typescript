/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Group of Tags
 */
export type ComponentsSchemasTagGroup = {
  /**
   * Name of the Tag Group
   */
  name?: string | undefined;
  /**
   * The ID of the Tag Group.<br>A Tag Group ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits.
   */
  id?: string | undefined;
};

/** @internal */
export const ComponentsSchemasTagGroup$inboundSchema: z.ZodType<
  ComponentsSchemasTagGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  id: z.string().optional(),
});

/** @internal */
export type ComponentsSchemasTagGroup$Outbound = {
  name?: string | undefined;
  id?: string | undefined;
};

/** @internal */
export const ComponentsSchemasTagGroup$outboundSchema: z.ZodType<
  ComponentsSchemasTagGroup$Outbound,
  z.ZodTypeDef,
  ComponentsSchemasTagGroup
> = z.object({
  name: z.string().optional(),
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComponentsSchemasTagGroup$ {
  /** @deprecated use `ComponentsSchemasTagGroup$inboundSchema` instead. */
  export const inboundSchema = ComponentsSchemasTagGroup$inboundSchema;
  /** @deprecated use `ComponentsSchemasTagGroup$outboundSchema` instead. */
  export const outboundSchema = ComponentsSchemasTagGroup$outboundSchema;
  /** @deprecated use `ComponentsSchemasTagGroup$Outbound` instead. */
  export type Outbound = ComponentsSchemasTagGroup$Outbound;
}

export function componentsSchemasTagGroupToJSON(
  componentsSchemasTagGroup: ComponentsSchemasTagGroup,
): string {
  return JSON.stringify(
    ComponentsSchemasTagGroup$outboundSchema.parse(componentsSchemasTagGroup),
  );
}

export function componentsSchemasTagGroupFromJSON(
  jsonString: string,
): SafeParseResult<ComponentsSchemasTagGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComponentsSchemasTagGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComponentsSchemasTagGroup' from JSON`,
  );
}
