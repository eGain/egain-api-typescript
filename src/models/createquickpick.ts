/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateQuickpick = {
  /**
   * name of the quick pick
   */
  name?: string | undefined;
  /**
   * comment about quick pick
   */
  comment?: string | undefined;
  /**
   * The numerical ID of Live release of the Casebase.
   */
  casebaseReleaseId: string;
  /**
   * indicates if quickpick is to be linked with activity
   */
  linkToActivity?: boolean | undefined;
};

/** @internal */
export const CreateQuickpick$inboundSchema: z.ZodType<
  CreateQuickpick,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  comment: z.string().optional(),
  casebaseReleaseId: z.string(),
  linkToActivity: z.boolean().optional(),
});

/** @internal */
export type CreateQuickpick$Outbound = {
  name?: string | undefined;
  comment?: string | undefined;
  casebaseReleaseId: string;
  linkToActivity?: boolean | undefined;
};

/** @internal */
export const CreateQuickpick$outboundSchema: z.ZodType<
  CreateQuickpick$Outbound,
  z.ZodTypeDef,
  CreateQuickpick
> = z.object({
  name: z.string().optional(),
  comment: z.string().optional(),
  casebaseReleaseId: z.string(),
  linkToActivity: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateQuickpick$ {
  /** @deprecated use `CreateQuickpick$inboundSchema` instead. */
  export const inboundSchema = CreateQuickpick$inboundSchema;
  /** @deprecated use `CreateQuickpick$outboundSchema` instead. */
  export const outboundSchema = CreateQuickpick$outboundSchema;
  /** @deprecated use `CreateQuickpick$Outbound` instead. */
  export type Outbound = CreateQuickpick$Outbound;
}

export function createQuickpickToJSON(
  createQuickpick: CreateQuickpick,
): string {
  return JSON.stringify(CreateQuickpick$outboundSchema.parse(createQuickpick));
}

export function createQuickpickFromJSON(
  jsonString: string,
): SafeParseResult<CreateQuickpick, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateQuickpick$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateQuickpick' from JSON`,
  );
}
