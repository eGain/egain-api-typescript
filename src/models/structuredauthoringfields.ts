/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  L10NString,
  L10NString$inboundSchema,
  L10NString$Outbound,
  L10NString$outboundSchema,
} from "./l10nstring.js";

export type StructuredAuthoringFields = {
  confidenceLevel?: L10NString | undefined;
  /**
   * Describes the problem, symptom, or question the article addresses.
   */
  issue?: string | undefined;
  /**
   * Specifies the relevant product(s), category, or business process tied to the issue.
   */
  environment?: string | undefined;
  /**
   * Identifies the underlying cause of the issue.
   */
  cause?: string | undefined;
};

/** @internal */
export const StructuredAuthoringFields$inboundSchema: z.ZodType<
  StructuredAuthoringFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  confidenceLevel: L10NString$inboundSchema.optional(),
  issue: z.string().optional(),
  environment: z.string().optional(),
  cause: z.string().optional(),
});

/** @internal */
export type StructuredAuthoringFields$Outbound = {
  confidenceLevel?: L10NString$Outbound | undefined;
  issue?: string | undefined;
  environment?: string | undefined;
  cause?: string | undefined;
};

/** @internal */
export const StructuredAuthoringFields$outboundSchema: z.ZodType<
  StructuredAuthoringFields$Outbound,
  z.ZodTypeDef,
  StructuredAuthoringFields
> = z.object({
  confidenceLevel: L10NString$outboundSchema.optional(),
  issue: z.string().optional(),
  environment: z.string().optional(),
  cause: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StructuredAuthoringFields$ {
  /** @deprecated use `StructuredAuthoringFields$inboundSchema` instead. */
  export const inboundSchema = StructuredAuthoringFields$inboundSchema;
  /** @deprecated use `StructuredAuthoringFields$outboundSchema` instead. */
  export const outboundSchema = StructuredAuthoringFields$outboundSchema;
  /** @deprecated use `StructuredAuthoringFields$Outbound` instead. */
  export type Outbound = StructuredAuthoringFields$Outbound;
}

export function structuredAuthoringFieldsToJSON(
  structuredAuthoringFields: StructuredAuthoringFields,
): string {
  return JSON.stringify(
    StructuredAuthoringFields$outboundSchema.parse(structuredAuthoringFields),
  );
}

export function structuredAuthoringFieldsFromJSON(
  jsonString: string,
): SafeParseResult<StructuredAuthoringFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StructuredAuthoringFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StructuredAuthoringFields' from JSON`,
  );
}
