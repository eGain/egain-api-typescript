/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  AttachmentForCreateSuggestion,
  AttachmentForCreateSuggestion$inboundSchema,
  AttachmentForCreateSuggestion$Outbound,
  AttachmentForCreateSuggestion$outboundSchema,
} from "./attachmentforcreatesuggestion.js";
import {
  CustomAttribute,
  CustomAttribute$inboundSchema,
  CustomAttribute$Outbound,
  CustomAttribute$outboundSchema,
} from "./customattribute.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The Article that the Suggestion was created for.
 */
export type RelatedArticleForCreateUpdateDeleteSuggestion = {
  /**
   * The ID of a Related Article.<br><br>An Article ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits.
   */
  id?: string | undefined;
};

/**
 * Details of Attachments for the Suggestion.
 */
export type CreateSuggestionAttachments = {
  /**
   * The list of Attachments.
   */
  attachment?: Array<AttachmentForCreateSuggestion> | undefined;
};

/**
 * The code of the language.
 */
export const CreateSuggestionCode = {
  EnUS: "en-US",
  EnGB: "en-GB",
  FRFR: "fr-FR",
  ESES: "es-ES",
  ITIT: "it-IT",
  DEDE: "de-DE",
  NLNL: "nl-NL",
  PtBR: "pt-BR",
  PTPT: "pt-PT",
  DaDK: "da-DK",
  SvSE: "sv-SE",
  RURU: "ru-RU",
  FrCA: "fr-CA",
  ZhCN: "zh-CN",
  JaJP: "ja-JP",
  KoKR: "ko-KR",
} as const;
/**
 * The code of the language.
 */
export type CreateSuggestionCode = ClosedEnum<typeof CreateSuggestionCode>;

/**
 * The knowledge base language in which the Suggestion is created.
 */
export type CreateSuggestionLanguage = {
  /**
   * The code of the language.
   */
  code: CreateSuggestionCode;
};

/**
 * This schema contains information about a Suggestion.
 */
export type CreateSuggestion = {
  /**
   * The name of the Suggestion.
   */
  name: string;
  /**
   * The description of the Suggestion.
   */
  description?: string | undefined;
  /**
   * The content of the Suggestion.
   */
  content: string;
  /**
   * The Article that the Suggestion was created for.
   */
  feedbackArticle?: RelatedArticleForCreateUpdateDeleteSuggestion | undefined;
  /**
   * Details of Attachments for the Suggestion.
   */
  attachments?: CreateSuggestionAttachments | undefined;
  /**
   * The knowledge base language in which the Suggestion is created.
   */
  language: CreateSuggestionLanguage;
  /**
   * The Custom Attributes of the Suggestion.
   */
  customAttributes?: Array<CustomAttribute> | undefined;
};

/** @internal */
export const RelatedArticleForCreateUpdateDeleteSuggestion$inboundSchema:
  z.ZodType<
    RelatedArticleForCreateUpdateDeleteSuggestion,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
  });

/** @internal */
export type RelatedArticleForCreateUpdateDeleteSuggestion$Outbound = {
  id?: string | undefined;
};

/** @internal */
export const RelatedArticleForCreateUpdateDeleteSuggestion$outboundSchema:
  z.ZodType<
    RelatedArticleForCreateUpdateDeleteSuggestion$Outbound,
    z.ZodTypeDef,
    RelatedArticleForCreateUpdateDeleteSuggestion
  > = z.object({
    id: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RelatedArticleForCreateUpdateDeleteSuggestion$ {
  /** @deprecated use `RelatedArticleForCreateUpdateDeleteSuggestion$inboundSchema` instead. */
  export const inboundSchema =
    RelatedArticleForCreateUpdateDeleteSuggestion$inboundSchema;
  /** @deprecated use `RelatedArticleForCreateUpdateDeleteSuggestion$outboundSchema` instead. */
  export const outboundSchema =
    RelatedArticleForCreateUpdateDeleteSuggestion$outboundSchema;
  /** @deprecated use `RelatedArticleForCreateUpdateDeleteSuggestion$Outbound` instead. */
  export type Outbound = RelatedArticleForCreateUpdateDeleteSuggestion$Outbound;
}

export function relatedArticleForCreateUpdateDeleteSuggestionToJSON(
  relatedArticleForCreateUpdateDeleteSuggestion:
    RelatedArticleForCreateUpdateDeleteSuggestion,
): string {
  return JSON.stringify(
    RelatedArticleForCreateUpdateDeleteSuggestion$outboundSchema.parse(
      relatedArticleForCreateUpdateDeleteSuggestion,
    ),
  );
}

export function relatedArticleForCreateUpdateDeleteSuggestionFromJSON(
  jsonString: string,
): SafeParseResult<
  RelatedArticleForCreateUpdateDeleteSuggestion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RelatedArticleForCreateUpdateDeleteSuggestion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RelatedArticleForCreateUpdateDeleteSuggestion' from JSON`,
  );
}

/** @internal */
export const CreateSuggestionAttachments$inboundSchema: z.ZodType<
  CreateSuggestionAttachments,
  z.ZodTypeDef,
  unknown
> = z.object({
  attachment: z.array(AttachmentForCreateSuggestion$inboundSchema).optional(),
});

/** @internal */
export type CreateSuggestionAttachments$Outbound = {
  attachment?: Array<AttachmentForCreateSuggestion$Outbound> | undefined;
};

/** @internal */
export const CreateSuggestionAttachments$outboundSchema: z.ZodType<
  CreateSuggestionAttachments$Outbound,
  z.ZodTypeDef,
  CreateSuggestionAttachments
> = z.object({
  attachment: z.array(AttachmentForCreateSuggestion$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSuggestionAttachments$ {
  /** @deprecated use `CreateSuggestionAttachments$inboundSchema` instead. */
  export const inboundSchema = CreateSuggestionAttachments$inboundSchema;
  /** @deprecated use `CreateSuggestionAttachments$outboundSchema` instead. */
  export const outboundSchema = CreateSuggestionAttachments$outboundSchema;
  /** @deprecated use `CreateSuggestionAttachments$Outbound` instead. */
  export type Outbound = CreateSuggestionAttachments$Outbound;
}

export function createSuggestionAttachmentsToJSON(
  createSuggestionAttachments: CreateSuggestionAttachments,
): string {
  return JSON.stringify(
    CreateSuggestionAttachments$outboundSchema.parse(
      createSuggestionAttachments,
    ),
  );
}

export function createSuggestionAttachmentsFromJSON(
  jsonString: string,
): SafeParseResult<CreateSuggestionAttachments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSuggestionAttachments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSuggestionAttachments' from JSON`,
  );
}

/** @internal */
export const CreateSuggestionCode$inboundSchema: z.ZodNativeEnum<
  typeof CreateSuggestionCode
> = z.nativeEnum(CreateSuggestionCode);

/** @internal */
export const CreateSuggestionCode$outboundSchema: z.ZodNativeEnum<
  typeof CreateSuggestionCode
> = CreateSuggestionCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSuggestionCode$ {
  /** @deprecated use `CreateSuggestionCode$inboundSchema` instead. */
  export const inboundSchema = CreateSuggestionCode$inboundSchema;
  /** @deprecated use `CreateSuggestionCode$outboundSchema` instead. */
  export const outboundSchema = CreateSuggestionCode$outboundSchema;
}

/** @internal */
export const CreateSuggestionLanguage$inboundSchema: z.ZodType<
  CreateSuggestionLanguage,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: CreateSuggestionCode$inboundSchema,
});

/** @internal */
export type CreateSuggestionLanguage$Outbound = {
  code: string;
};

/** @internal */
export const CreateSuggestionLanguage$outboundSchema: z.ZodType<
  CreateSuggestionLanguage$Outbound,
  z.ZodTypeDef,
  CreateSuggestionLanguage
> = z.object({
  code: CreateSuggestionCode$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSuggestionLanguage$ {
  /** @deprecated use `CreateSuggestionLanguage$inboundSchema` instead. */
  export const inboundSchema = CreateSuggestionLanguage$inboundSchema;
  /** @deprecated use `CreateSuggestionLanguage$outboundSchema` instead. */
  export const outboundSchema = CreateSuggestionLanguage$outboundSchema;
  /** @deprecated use `CreateSuggestionLanguage$Outbound` instead. */
  export type Outbound = CreateSuggestionLanguage$Outbound;
}

export function createSuggestionLanguageToJSON(
  createSuggestionLanguage: CreateSuggestionLanguage,
): string {
  return JSON.stringify(
    CreateSuggestionLanguage$outboundSchema.parse(createSuggestionLanguage),
  );
}

export function createSuggestionLanguageFromJSON(
  jsonString: string,
): SafeParseResult<CreateSuggestionLanguage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSuggestionLanguage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSuggestionLanguage' from JSON`,
  );
}

/** @internal */
export const CreateSuggestion$inboundSchema: z.ZodType<
  CreateSuggestion,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  content: z.string(),
  feedbackArticle: z.lazy(() =>
    RelatedArticleForCreateUpdateDeleteSuggestion$inboundSchema
  ).optional(),
  attachments: z.lazy(() => CreateSuggestionAttachments$inboundSchema)
    .optional(),
  language: z.lazy(() => CreateSuggestionLanguage$inboundSchema),
  customAttributes: z.array(CustomAttribute$inboundSchema).optional(),
});

/** @internal */
export type CreateSuggestion$Outbound = {
  name: string;
  description?: string | undefined;
  content: string;
  feedbackArticle?:
    | RelatedArticleForCreateUpdateDeleteSuggestion$Outbound
    | undefined;
  attachments?: CreateSuggestionAttachments$Outbound | undefined;
  language: CreateSuggestionLanguage$Outbound;
  customAttributes?: Array<CustomAttribute$Outbound> | undefined;
};

/** @internal */
export const CreateSuggestion$outboundSchema: z.ZodType<
  CreateSuggestion$Outbound,
  z.ZodTypeDef,
  CreateSuggestion
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  content: z.string(),
  feedbackArticle: z.lazy(() =>
    RelatedArticleForCreateUpdateDeleteSuggestion$outboundSchema
  ).optional(),
  attachments: z.lazy(() => CreateSuggestionAttachments$outboundSchema)
    .optional(),
  language: z.lazy(() => CreateSuggestionLanguage$outboundSchema),
  customAttributes: z.array(CustomAttribute$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSuggestion$ {
  /** @deprecated use `CreateSuggestion$inboundSchema` instead. */
  export const inboundSchema = CreateSuggestion$inboundSchema;
  /** @deprecated use `CreateSuggestion$outboundSchema` instead. */
  export const outboundSchema = CreateSuggestion$outboundSchema;
  /** @deprecated use `CreateSuggestion$Outbound` instead. */
  export type Outbound = CreateSuggestion$Outbound;
}

export function createSuggestionToJSON(
  createSuggestion: CreateSuggestion,
): string {
  return JSON.stringify(
    CreateSuggestion$outboundSchema.parse(createSuggestion),
  );
}

export function createSuggestionFromJSON(
  jsonString: string,
): SafeParseResult<CreateSuggestion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSuggestion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSuggestion' from JSON`,
  );
}
