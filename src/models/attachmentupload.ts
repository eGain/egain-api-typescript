/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AttachmentUpload = {
  /**
   * The name of the attachment.
   */
  name: string;
  /**
   * The size of the attachment in bytes. The maximum size is limited to 25MB.
   */
  size: number;
};

/** @internal */
export const AttachmentUpload$inboundSchema: z.ZodType<
  AttachmentUpload,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  size: z.number().int(),
});

/** @internal */
export type AttachmentUpload$Outbound = {
  name: string;
  size: number;
};

/** @internal */
export const AttachmentUpload$outboundSchema: z.ZodType<
  AttachmentUpload$Outbound,
  z.ZodTypeDef,
  AttachmentUpload
> = z.object({
  name: z.string(),
  size: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttachmentUpload$ {
  /** @deprecated use `AttachmentUpload$inboundSchema` instead. */
  export const inboundSchema = AttachmentUpload$inboundSchema;
  /** @deprecated use `AttachmentUpload$outboundSchema` instead. */
  export const outboundSchema = AttachmentUpload$outboundSchema;
  /** @deprecated use `AttachmentUpload$Outbound` instead. */
  export type Outbound = AttachmentUpload$Outbound;
}

export function attachmentUploadToJSON(
  attachmentUpload: AttachmentUpload,
): string {
  return JSON.stringify(
    AttachmentUpload$outboundSchema.parse(attachmentUpload),
  );
}

export function attachmentUploadFromJSON(
  jsonString: string,
): SafeParseResult<AttachmentUpload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AttachmentUpload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AttachmentUpload' from JSON`,
  );
}
