/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ConfigurableAttributes,
  ConfigurableAttributes$inboundSchema,
  ConfigurableAttributes$Outbound,
  ConfigurableAttributes$outboundSchema,
} from "./configurableattributes.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SearchFilterAttribute,
  SearchFilterAttribute$inboundSchema,
  SearchFilterAttribute$Outbound,
  SearchFilterAttribute$outboundSchema,
} from "./searchfilterattribute.js";
import {
  TagCategoriesForInterest,
  TagCategoriesForInterest$inboundSchema,
  TagCategoriesForInterest$Outbound,
  TagCategoriesForInterest$outboundSchema,
} from "./tagcategoriesforinterest.js";

/**
 * Affects the influence of learning on search rankings. 0 = off, 1 = low, 2 = medium, 3 = high, 4 = custom.
 */
export const SearchLearningLevel = {
  Zero: 0,
  One: 1,
  Two: 2,
  Three: 3,
  Four: 4,
} as const;
/**
 * Affects the influence of learning on search rankings. 0 = off, 1 = low, 2 = medium, 3 = high, 4 = custom.
 */
export type SearchLearningLevel = ClosedEnum<typeof SearchLearningLevel>;

/**
 * The settings for this portal.
 */
export type PortalSettings = {
  /**
   * Whether the announcements section is enabled on this portal.
   */
  isAnnoucementsEnabled?: boolean | undefined;
  /**
   * Whether article feedback is allowed.
   */
  isArticleFeedbackEnabled?: boolean | undefined;
  /**
   * Whether comments should be included in the feedback.
   */
  isArticleFeedbackCommentsEnabled?: boolean | undefined;
  /**
   * Whether a summary of feedback ratings should be displayed.
   */
  isArticleFeedbackSummaryEnabled?: boolean | undefined;
  /**
   * Whether all articles in the same topic are automatically treated as related articles.
   */
  isRelatedArticlesInSameTopicEnabled?: boolean | undefined;
  /**
   * Whether the related articles section is shown.
   */
  isRelatedArticlesEnabled?: boolean | undefined;
  /**
   * Whether the portal requires authentication for access.
   */
  isAuthenticationRequired?: boolean | undefined;
  /**
   * Whether SSO is enabled for agents
   */
  isAgentsSSOEnabled?: boolean | undefined;
  /**
   * Whether delegated authentication is enabled for agents
   */
  isAgentsDelegatedAuthenticationEnabled?: boolean | undefined;
  customerProfileAttributes?: ConfigurableAttributes | undefined;
  /**
   * Whether the popular articles list is displayed. Maximum of 50 popular articles will be dislpayed.
   */
  isPopularArticlesListEnabled?: boolean | undefined;
  /**
   * The weight assigned to the influence of related articles on the ranking of popular articles in the ranking formula.
   */
  popularArticlesListInfluenceWeight?: number | undefined;
  /**
   * The timeframe in days that related articles affect the ranking of popular articles in the ranking formula.
   */
  popularArticlesListInfluencePeriod?: number | undefined;
  /**
   * Whether the session transcript should be appended to the email message.
   */
  appendSessionJourneyToEmail?: boolean | undefined;
  /**
   * Whether a user is  shown suggested articles before escalating.
   */
  isArticleSuggestionsBeforeEscalationEnabled?: boolean | undefined;
  /**
   * Whether the user can ask a question via email if Guided Help doesnâ€™t provide an answer, triggering a search before escalation.
   */
  isEscalationToEmailEnabled?: boolean | undefined;
  /**
   * The number of articles to show to a customer before escalation.
   */
  numberOfSuggestedArticlesBeforeEscalation?: number | undefined;
  /**
   * Whether guided help is enabled.
   */
  isGHEnabled?: boolean | undefined;
  /**
   * Whether to show guided help results in search results.
   */
  isGHInSearchResultsEnabled?: boolean | undefined;
  /**
   * Whether startup questions should be presented before unanswered questions in Guided Help.
   */
  isGHStartupQuestionsBeforeUnansweredQuestionsEnabled?: boolean | undefined;
  /**
   * Whether additional information should be shown in search results.
   */
  isGHDetailsForSearchEnabled?: boolean | undefined;
  /**
   * When enabled it shows the short names in results.
   */
  isGHShortNameInSearchEnabled?: boolean | undefined;
  /**
   * Whether to show Cluster scope diagnostics during execution.
   */
  isGHClusterScopeDiagnosticsEnabled?: boolean | undefined;
  /**
   * Whether to automatically display results on search success.
   */
  isGHResultsShownOnSuccessfulSearch?: boolean | undefined;
  /**
   * isGHControlActionDiagnosticsEnabled
   */
  isGHControlActionDiagnosticsEnabled?: boolean | undefined;
  /**
   * A value from range that indicates the failure-success score
   */
  ghFailureSuccessThreshold?: number | undefined;
  /**
   * A value indicating the maximum number of answered questions.
   */
  maxGHAnsweredQuestions?: number | undefined;
  /**
   * A value indicating the maximum number of unanswered questions.
   */
  maxGHUnansweredQuestions?: number | undefined;
  /**
   * Maximum number of guided help results to return.
   */
  maxGHSearchResults?: number | undefined;
  /**
   * Whether the autocomplete interface should be enabled.
   */
  isSearchAutocompleteEnabled?: boolean | undefined;
  /**
   * Whether web searches should be performed as part of multi-search.
   */
  isWebSearchEnabled?: boolean | undefined;
  /**
   * The maximum number of results from the web search to return.
   */
  maxWebSearchResults?: number | undefined;
  /**
   * Use this to restrict web search results to a specific domain.
   */
  webSearchDomain?: string | undefined;
  /**
   * Whether intranet results should be returned as part of multi-search.
   */
  isIntranetSearchEnabled?: boolean | undefined;
  /**
   * The maximum number of results from an intranet search to return.
   */
  maxIntranetSearchResults?: number | undefined;
  /**
   * The URL for the Intranet Search.
   */
  intranetSearchURL?: string | undefined;
  /**
   * Whether spell-correction should be performed on search queries. The corrected query is returned with the results, but is not automatically used.
   */
  isSpellcheckEnabled?: boolean | undefined;
  /**
   * The URL for the question matching engine.
   */
  questionMatchingEngineURL?: string | undefined;
  /**
   * Whether search results should be filtered by custom attribute values.
   */
  isCustomAttributesFilteringEnabled?: boolean | undefined;
  customAttributesForSearchFilter?: Array<SearchFilterAttribute> | undefined;
  /**
   * The minimum number of accepts and rejects of an article before article ranking is affected.
   */
  searchLearningInclusionThreshold?: number | undefined;
  /**
   * A ranking multiplier for learned scoring.
   */
  searchLearningInfluence?: number | undefined;
  /**
   * Affects the influence of learning on search rankings. 0 = off, 1 = low, 2 = medium, 3 = high, 4 = custom.
   */
  searchLearningLevel?: SearchLearningLevel | undefined;
  /**
   * The maximum influence allowed for learned scoring.
   */
  searchLearningMaxInfluence?: number | undefined;
  /**
   * The weight assigned to related terms during search.
   */
  searchRelatedTermWeight?: number | undefined;
  /**
   * If the number of search results is less than or equal to this value, a search with related terms will be used to fill in results.
   */
  searchRelatedTermsMinResultsThreshold?: number | undefined;
  /**
   * Whether users can make suggestions on an article.
   */
  isArticleSuggestionsEnabled?: boolean | undefined;
  /**
   * Whether a user can view their suggestions.
   */
  isMySuggestionsEnabled?: boolean | undefined;
  /**
   * Whether CAPTCHA is enabled or not in the portal.
   */
  isCaptchaEnabled?: boolean | undefined;
  /**
   * The configured CAPTCHA site key.
   */
  captchaSiteKey?: string | undefined;
  /**
   * Whether the article sharing is enabled.
   */
  isArticleSharingEnabled?: boolean | undefined;
  tagCategoriesForSearchFilter?: TagCategoriesForInterest | undefined;
};

/** @internal */
export const SearchLearningLevel$inboundSchema: z.ZodNativeEnum<
  typeof SearchLearningLevel
> = z.nativeEnum(SearchLearningLevel);

/** @internal */
export const SearchLearningLevel$outboundSchema: z.ZodNativeEnum<
  typeof SearchLearningLevel
> = SearchLearningLevel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchLearningLevel$ {
  /** @deprecated use `SearchLearningLevel$inboundSchema` instead. */
  export const inboundSchema = SearchLearningLevel$inboundSchema;
  /** @deprecated use `SearchLearningLevel$outboundSchema` instead. */
  export const outboundSchema = SearchLearningLevel$outboundSchema;
}

/** @internal */
export const PortalSettings$inboundSchema: z.ZodType<
  PortalSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  isAnnoucementsEnabled: z.boolean().optional(),
  isArticleFeedbackEnabled: z.boolean().optional(),
  isArticleFeedbackCommentsEnabled: z.boolean().optional(),
  isArticleFeedbackSummaryEnabled: z.boolean().optional(),
  isRelatedArticlesInSameTopicEnabled: z.boolean().optional(),
  isRelatedArticlesEnabled: z.boolean().optional(),
  isAuthenticationRequired: z.boolean().optional(),
  isAgentsSSOEnabled: z.boolean().optional(),
  isAgentsDelegatedAuthenticationEnabled: z.boolean().optional(),
  customerProfileAttributes: ConfigurableAttributes$inboundSchema.optional(),
  isPopularArticlesListEnabled: z.boolean().optional(),
  popularArticlesListInfluenceWeight: z.number().optional(),
  popularArticlesListInfluencePeriod: z.number().int().optional(),
  appendSessionJourneyToEmail: z.boolean().optional(),
  isArticleSuggestionsBeforeEscalationEnabled: z.boolean().optional(),
  isEscalationToEmailEnabled: z.boolean().optional(),
  numberOfSuggestedArticlesBeforeEscalation: z.number().int().optional(),
  isGHEnabled: z.boolean().optional(),
  isGHInSearchResultsEnabled: z.boolean().optional(),
  isGHStartupQuestionsBeforeUnansweredQuestionsEnabled: z.boolean().optional(),
  isGHDetailsForSearchEnabled: z.boolean().optional(),
  isGHShortNameInSearchEnabled: z.boolean().optional(),
  isGHClusterScopeDiagnosticsEnabled: z.boolean().optional(),
  isGHResultsShownOnSuccessfulSearch: z.boolean().optional(),
  isGHControlActionDiagnosticsEnabled: z.boolean().optional(),
  GHFailureSuccessThreshold: z.number().optional(),
  maxGHAnsweredQuestions: z.number().int().optional(),
  maxGHUnansweredQuestions: z.number().int().optional(),
  maxGHSearchResults: z.number().int().optional(),
  isSearchAutocompleteEnabled: z.boolean().optional(),
  isWebSearchEnabled: z.boolean().optional(),
  maxWebSearchResults: z.number().int().optional(),
  webSearchDomain: z.string().optional(),
  isIntranetSearchEnabled: z.boolean().optional(),
  maxIntranetSearchResults: z.number().int().optional(),
  intranetSearchURL: z.string().optional(),
  isSpellcheckEnabled: z.boolean().optional(),
  questionMatchingEngineURL: z.string().optional(),
  isCustomAttributesFilteringEnabled: z.boolean().optional(),
  customAttributesForSearchFilter: z.array(SearchFilterAttribute$inboundSchema)
    .optional(),
  searchLearningInclusionThreshold: z.number().int().optional(),
  searchLearningInfluence: z.number().int().optional(),
  searchLearningLevel: SearchLearningLevel$inboundSchema.optional(),
  searchLearningMaxInfluence: z.number().int().optional(),
  searchRelatedTermWeight: z.number().optional(),
  searchRelatedTermsMinResultsThreshold: z.number().int().optional(),
  isArticleSuggestionsEnabled: z.boolean().optional(),
  isMySuggestionsEnabled: z.boolean().optional(),
  isCaptchaEnabled: z.boolean().optional(),
  captchaSiteKey: z.string().optional(),
  isArticleSharingEnabled: z.boolean().optional(),
  tagCategoriesForSearchFilter: TagCategoriesForInterest$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "GHFailureSuccessThreshold": "ghFailureSuccessThreshold",
  });
});

/** @internal */
export type PortalSettings$Outbound = {
  isAnnoucementsEnabled?: boolean | undefined;
  isArticleFeedbackEnabled?: boolean | undefined;
  isArticleFeedbackCommentsEnabled?: boolean | undefined;
  isArticleFeedbackSummaryEnabled?: boolean | undefined;
  isRelatedArticlesInSameTopicEnabled?: boolean | undefined;
  isRelatedArticlesEnabled?: boolean | undefined;
  isAuthenticationRequired?: boolean | undefined;
  isAgentsSSOEnabled?: boolean | undefined;
  isAgentsDelegatedAuthenticationEnabled?: boolean | undefined;
  customerProfileAttributes?: ConfigurableAttributes$Outbound | undefined;
  isPopularArticlesListEnabled?: boolean | undefined;
  popularArticlesListInfluenceWeight?: number | undefined;
  popularArticlesListInfluencePeriod?: number | undefined;
  appendSessionJourneyToEmail?: boolean | undefined;
  isArticleSuggestionsBeforeEscalationEnabled?: boolean | undefined;
  isEscalationToEmailEnabled?: boolean | undefined;
  numberOfSuggestedArticlesBeforeEscalation?: number | undefined;
  isGHEnabled?: boolean | undefined;
  isGHInSearchResultsEnabled?: boolean | undefined;
  isGHStartupQuestionsBeforeUnansweredQuestionsEnabled?: boolean | undefined;
  isGHDetailsForSearchEnabled?: boolean | undefined;
  isGHShortNameInSearchEnabled?: boolean | undefined;
  isGHClusterScopeDiagnosticsEnabled?: boolean | undefined;
  isGHResultsShownOnSuccessfulSearch?: boolean | undefined;
  isGHControlActionDiagnosticsEnabled?: boolean | undefined;
  GHFailureSuccessThreshold?: number | undefined;
  maxGHAnsweredQuestions?: number | undefined;
  maxGHUnansweredQuestions?: number | undefined;
  maxGHSearchResults?: number | undefined;
  isSearchAutocompleteEnabled?: boolean | undefined;
  isWebSearchEnabled?: boolean | undefined;
  maxWebSearchResults?: number | undefined;
  webSearchDomain?: string | undefined;
  isIntranetSearchEnabled?: boolean | undefined;
  maxIntranetSearchResults?: number | undefined;
  intranetSearchURL?: string | undefined;
  isSpellcheckEnabled?: boolean | undefined;
  questionMatchingEngineURL?: string | undefined;
  isCustomAttributesFilteringEnabled?: boolean | undefined;
  customAttributesForSearchFilter?:
    | Array<SearchFilterAttribute$Outbound>
    | undefined;
  searchLearningInclusionThreshold?: number | undefined;
  searchLearningInfluence?: number | undefined;
  searchLearningLevel?: number | undefined;
  searchLearningMaxInfluence?: number | undefined;
  searchRelatedTermWeight?: number | undefined;
  searchRelatedTermsMinResultsThreshold?: number | undefined;
  isArticleSuggestionsEnabled?: boolean | undefined;
  isMySuggestionsEnabled?: boolean | undefined;
  isCaptchaEnabled?: boolean | undefined;
  captchaSiteKey?: string | undefined;
  isArticleSharingEnabled?: boolean | undefined;
  tagCategoriesForSearchFilter?: TagCategoriesForInterest$Outbound | undefined;
};

/** @internal */
export const PortalSettings$outboundSchema: z.ZodType<
  PortalSettings$Outbound,
  z.ZodTypeDef,
  PortalSettings
> = z.object({
  isAnnoucementsEnabled: z.boolean().optional(),
  isArticleFeedbackEnabled: z.boolean().optional(),
  isArticleFeedbackCommentsEnabled: z.boolean().optional(),
  isArticleFeedbackSummaryEnabled: z.boolean().optional(),
  isRelatedArticlesInSameTopicEnabled: z.boolean().optional(),
  isRelatedArticlesEnabled: z.boolean().optional(),
  isAuthenticationRequired: z.boolean().optional(),
  isAgentsSSOEnabled: z.boolean().optional(),
  isAgentsDelegatedAuthenticationEnabled: z.boolean().optional(),
  customerProfileAttributes: ConfigurableAttributes$outboundSchema.optional(),
  isPopularArticlesListEnabled: z.boolean().optional(),
  popularArticlesListInfluenceWeight: z.number().optional(),
  popularArticlesListInfluencePeriod: z.number().int().optional(),
  appendSessionJourneyToEmail: z.boolean().optional(),
  isArticleSuggestionsBeforeEscalationEnabled: z.boolean().optional(),
  isEscalationToEmailEnabled: z.boolean().optional(),
  numberOfSuggestedArticlesBeforeEscalation: z.number().int().optional(),
  isGHEnabled: z.boolean().optional(),
  isGHInSearchResultsEnabled: z.boolean().optional(),
  isGHStartupQuestionsBeforeUnansweredQuestionsEnabled: z.boolean().optional(),
  isGHDetailsForSearchEnabled: z.boolean().optional(),
  isGHShortNameInSearchEnabled: z.boolean().optional(),
  isGHClusterScopeDiagnosticsEnabled: z.boolean().optional(),
  isGHResultsShownOnSuccessfulSearch: z.boolean().optional(),
  isGHControlActionDiagnosticsEnabled: z.boolean().optional(),
  ghFailureSuccessThreshold: z.number().optional(),
  maxGHAnsweredQuestions: z.number().int().optional(),
  maxGHUnansweredQuestions: z.number().int().optional(),
  maxGHSearchResults: z.number().int().optional(),
  isSearchAutocompleteEnabled: z.boolean().optional(),
  isWebSearchEnabled: z.boolean().optional(),
  maxWebSearchResults: z.number().int().optional(),
  webSearchDomain: z.string().optional(),
  isIntranetSearchEnabled: z.boolean().optional(),
  maxIntranetSearchResults: z.number().int().optional(),
  intranetSearchURL: z.string().optional(),
  isSpellcheckEnabled: z.boolean().optional(),
  questionMatchingEngineURL: z.string().optional(),
  isCustomAttributesFilteringEnabled: z.boolean().optional(),
  customAttributesForSearchFilter: z.array(SearchFilterAttribute$outboundSchema)
    .optional(),
  searchLearningInclusionThreshold: z.number().int().optional(),
  searchLearningInfluence: z.number().int().optional(),
  searchLearningLevel: SearchLearningLevel$outboundSchema.optional(),
  searchLearningMaxInfluence: z.number().int().optional(),
  searchRelatedTermWeight: z.number().optional(),
  searchRelatedTermsMinResultsThreshold: z.number().int().optional(),
  isArticleSuggestionsEnabled: z.boolean().optional(),
  isMySuggestionsEnabled: z.boolean().optional(),
  isCaptchaEnabled: z.boolean().optional(),
  captchaSiteKey: z.string().optional(),
  isArticleSharingEnabled: z.boolean().optional(),
  tagCategoriesForSearchFilter: TagCategoriesForInterest$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    ghFailureSuccessThreshold: "GHFailureSuccessThreshold",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PortalSettings$ {
  /** @deprecated use `PortalSettings$inboundSchema` instead. */
  export const inboundSchema = PortalSettings$inboundSchema;
  /** @deprecated use `PortalSettings$outboundSchema` instead. */
  export const outboundSchema = PortalSettings$outboundSchema;
  /** @deprecated use `PortalSettings$Outbound` instead. */
  export type Outbound = PortalSettings$Outbound;
}

export function portalSettingsToJSON(portalSettings: PortalSettings): string {
  return JSON.stringify(PortalSettings$outboundSchema.parse(portalSettings));
}

export function portalSettingsFromJSON(
  jsonString: string,
): SafeParseResult<PortalSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PortalSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PortalSettings' from JSON`,
  );
}
