/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * The fields of the article to be returned.
 */
export const OptionalArticleAttributes = {
  ArticleMacro: "articleMacro",
  AvailabilityDate: "availabilityDate",
  AverageRating: "averageRating",
  ContentText: "contentText",
  OrderNumber: "orderNumber",
  SuggestionType: "suggestionType",
  TimesRated: "timesRated",
  AvailableEditions: "availableEditions",
  ArticleTypeAttributes: "articleTypeAttributes",
  Milestone: "milestone",
  All: "all",
} as const;
/**
 * The fields of the article to be returned.
 */
export type OptionalArticleAttributes = ClosedEnum<
  typeof OptionalArticleAttributes
>;

/** @internal */
export const OptionalArticleAttributes$inboundSchema: z.ZodNativeEnum<
  typeof OptionalArticleAttributes
> = z.nativeEnum(OptionalArticleAttributes);

/** @internal */
export const OptionalArticleAttributes$outboundSchema: z.ZodNativeEnum<
  typeof OptionalArticleAttributes
> = OptionalArticleAttributes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OptionalArticleAttributes$ {
  /** @deprecated use `OptionalArticleAttributes$inboundSchema` instead. */
  export const inboundSchema = OptionalArticleAttributes$inboundSchema;
  /** @deprecated use `OptionalArticleAttributes$outboundSchema` instead. */
  export const outboundSchema = OptionalArticleAttributes$outboundSchema;
}
