/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ArticleRating,
  ArticleRating$inboundSchema,
  ArticleRating$Outbound,
  ArticleRating$outboundSchema,
} from "./articlerating.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  PaginationInfo,
  PaginationInfo$inboundSchema,
  PaginationInfo$Outbound,
  PaginationInfo$outboundSchema,
} from "./paginationinfo.js";

/**
 * Success
 */
export type ArticleRatingsResponse = {
  articleRatings?: Array<ArticleRating> | undefined;
  paginationInfo?: PaginationInfo | undefined;
};

/** @internal */
export const ArticleRatingsResponse$inboundSchema: z.ZodType<
  ArticleRatingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  articleRatings: z.array(ArticleRating$inboundSchema).optional(),
  paginationInfo: PaginationInfo$inboundSchema.optional(),
});

/** @internal */
export type ArticleRatingsResponse$Outbound = {
  articleRatings?: Array<ArticleRating$Outbound> | undefined;
  paginationInfo?: PaginationInfo$Outbound | undefined;
};

/** @internal */
export const ArticleRatingsResponse$outboundSchema: z.ZodType<
  ArticleRatingsResponse$Outbound,
  z.ZodTypeDef,
  ArticleRatingsResponse
> = z.object({
  articleRatings: z.array(ArticleRating$outboundSchema).optional(),
  paginationInfo: PaginationInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticleRatingsResponse$ {
  /** @deprecated use `ArticleRatingsResponse$inboundSchema` instead. */
  export const inboundSchema = ArticleRatingsResponse$inboundSchema;
  /** @deprecated use `ArticleRatingsResponse$outboundSchema` instead. */
  export const outboundSchema = ArticleRatingsResponse$outboundSchema;
  /** @deprecated use `ArticleRatingsResponse$Outbound` instead. */
  export type Outbound = ArticleRatingsResponse$Outbound;
}

export function articleRatingsResponseToJSON(
  articleRatingsResponse: ArticleRatingsResponse,
): string {
  return JSON.stringify(
    ArticleRatingsResponse$outboundSchema.parse(articleRatingsResponse),
  );
}

export function articleRatingsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ArticleRatingsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ArticleRatingsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ArticleRatingsResponse' from JSON`,
  );
}
