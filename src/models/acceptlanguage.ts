/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const AcceptLanguage = {
  EnUS: "en-US",
  ESES: "es-ES",
  FRFR: "fr-FR",
  ITIT: "it-IT",
  DEDE: "de-DE",
  NLNL: "nl-NL",
  PtBR: "pt-BR",
  PTPT: "pt-PT",
  DaDK: "da-DK",
  RURU: "ru-RU",
  FrCA: "fr-CA",
  ZhCN: "zh-CN",
  JaJP: "ja-JP",
  KoKR: "ko-KR",
  SvSE: "sv-SE",
} as const;
export type AcceptLanguage = ClosedEnum<typeof AcceptLanguage>;

/** @internal */
export const AcceptLanguage$inboundSchema: z.ZodNativeEnum<
  typeof AcceptLanguage
> = z.nativeEnum(AcceptLanguage);

/** @internal */
export const AcceptLanguage$outboundSchema: z.ZodNativeEnum<
  typeof AcceptLanguage
> = AcceptLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AcceptLanguage$ {
  /** @deprecated use `AcceptLanguage$inboundSchema` instead. */
  export const inboundSchema = AcceptLanguage$inboundSchema;
  /** @deprecated use `AcceptLanguage$outboundSchema` instead. */
  export const outboundSchema = AcceptLanguage$outboundSchema;
}
